<?php
/**
 * Created by PhpStorm.
 * User: zolkinka
 * Date: 08.01.18
 * Time: 17:44
 */

namespace App;


use Faker\Provider\DateTime;
use PhpParser\Node\Arg;

class MAE
{

    public $tgr;
    public $b;
    public $kvaz;
    public $db;
    public $dhd;
    public $dhpp;
    public $dhp;
    public $dht;
    public $dhpres;
    public $dhR;

    public $St;

public $arrPHI = [
74,
72,
70,
68,
66,
64,
62,
60,
58,
56,
54,
52,
50,
45,
40,
30,
20,
10,
0,
-10,
-20,
-30,
-40,
-45,
-50,
-52,
-54,
-56,
-58,
-60
];

public $arrtgrs = [180.8983, 180.8867, 180.87, 180.8533, 180.8333, 180.8117, 180.7883, 180.7617, 180.7333, 183.5867, 183.6383, 183.6883, 183.7367, 183.78, 183.8233, 183.8617, 183.9, 183.9333];

    public $arrbs = [19.7333, 19.945, 20.1517, 20.3533, 20.5483, 20.7367, 20.92, 21.0983, 21.27, -8.8267, -9.195, -9.56, -9.9233, -10.2833, -10.6417, -10.9967, -11.3483, -11.6983];

//    public $arrdate = [19, 20, 21, 22, 23, 24, 25, 26, 27, 16, 17, 18, 19, 20, 21, 22, 23, 24];

    public $arrdate=[[],[],[],[],[19, 20, 21, 22, 23, 24, 25, 26, 27],[],[],[],[],[16, 17, 18, 19, 20, 21, 22, 23, 24],[],[]];

public $arrmonth = [5, 5, 5, 5, 5, 5, 5, 5, 5, 10, 10, 10, 10, 10, 10, 10, 10, 10];
    public $i = 0;

    public $arrkvazi = [0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1];

    public $arrdeltab = [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -0.9, -0.9, -0.9, -0.9, -0.9, -0.9, -0.8, -0.8, -0.8];


    public $arrSt=[
        '19.5'=>(236+43.8/60),
        '20.5'=>(237+42.9/60),
        '21.5'=>(238+42/60),
        '22.5'=>(239+41.2/60),
        '23.5'=>(240+40.3/60),
        '24.5'=>(241+39.5/60),
        '25.5'=>(242+38.6/60),
        '26.5'=>(243+37.7/60),
        '27.5'=>(244+36.9/60),
        '16.10'=>(24+34.6/60),
        '17.10'=>(25+33.7/60),
        '18.10'=>(26+32.9/60),
        '19.10'=>(27+32/60),
        '20.10'=>(28+31.1/60),
        '21.10'=>(29+30.3/60),
        '22.10'=>(30+29.4/60),
        '23.10'=>(31+28.6/60),
        '24.10'=>(32+27.7/60),
    ];

    public $arrTk=[
        '19.5'=>[11,56],
        '20.5'=>[11,56],
        '21.5'=>[11,56],
        '22.5'=>[11,56],
        '23.5'=>[11,56],
        '24.5'=>[11,56],
        '25.5'=>[11,56],
        '26.5'=>[11,57],
        '27.5'=>[11,57],
        '16.10'=>[11,45],
        '17.10'=>[11,45],
        '18.10'=>[11,45],
        '19.10'=>[11,44],
        '20.10'=>[11,44],
        '21.10'=>[11,44],
        '22.10'=>[11,44],
        '23.10'=>[11,44],
        '24.10'=>[11,44],
    ];


    public $arrTv=[
         '74'=>[['',''],],
         '72'=>[['',''],],
         '70'=>[['',''],],
         '68'=>[['',''],],
         '66'=>[['',''],],
         '64'=>[['',''],],
         '62'=>[['',''],],
         '60'=>[['',''],],
         '58'=>[['',''],],
         '56'=>[['',''],],
         '54'=>[['',''],],
         '52'=>[['',''],],
         '50'=>[[4,8],],
         '45'=>[[4,26],],
         '40'=>[[4,41],],
         '30'=>[[5,4],],
         '20'=>[[5,22],],
         '10'=>[[5,38],],
         '0'=>[[5,53],],
         '-10'=>[[6,8],],
         '-20'=>[[6,23],],
         '-30'=>[[6,41],],
         '-40'=>[[7,03],],
         '-45'=>[[7,17],],
         '-50'=>[[7,33],],
         '-52'=>[['',''],],
         '-54'=>[['',''],],
         '-56'=>[['',''],],
         '-58'=>[['',''],],
         '-60'=>[['',''],],
    ];


    ///часовой уго на указанную дату и время


    public $stars=[
        '1'=>['t'=>(357+53.6/60),'b'=>(29+5.6/60)],
        '2'=>['t'=>(357+41.8/60),'b'=>(59+9/60)],
        '3'=>['t'=>(356+40.8/60),'b'=>(15+11.2/60)],
        '6'=>['t'=>(349+51.9/60),'b'=>(56+32.3/60)],
        '7'=>['t'=>(349+5.6/60),'b'=>(-17-58.9/60)],
        '11'=>['t'=>(335+34.2/60),'b'=>(-57-13.8/60)],
    ];


public $dhd_e=[3.18,
3.39,
3.6,
3.82,
4.04,
4.27,
4.51,
4.75,
5,
5.26,
5.52,
5.79,
6.07,
6.35,
6.64,
6.93,
7.24,
7.54,
7.86,
8.18,
8.5,
8.84,
9.17,
9.52,
9.88,
10.24,
10.6,
10.98,
11.35,
11.74,
12.13,
12.52,
12.93,
13.34,
13.76,
14.18,
14.62,
15.05,
15.49,
15.94,
16.39,
16.86,
17.32,
17.8,
18.28,
18.77,
19.26,
19.76,
20.27,
];

public $dhd_d = [-3.2,
-3.3,
-3.4,
-3.5,
-3.6,
-3.7,
-3.8,
-3.9,
-4,
-4.1,
-4.2,
-4.3,
-4.4,
-4.5,
-4.6,
-4.7,
-4.8,
-4.9,
-5,
-5.1,
-5.2,
-5.3,
-5.4,
-5.5,
-5.6,
-5.7,
-5.8,
-5.9,
-6,
-6.1,
-6.2,
-6.3,
-6.4,
-6.5,
-6.6,
-6.7,
-6.8,
-6.9,
-7,
-7.1,
-7.2,
-7.3,
-7.4,
-7.5,
-7.6,
-7.7,
-7.8,
-7.9,
-8,
];

public function get_dhd($e){

    for($i=0;$i<count($this->dhd_e);$i++){
        if($e<$this->dhd_e[$i]){
            return $this->dhd_d[$i];
        }
    }
}

public $arrhpp=[4.97,
5.03,
5.1,
5.17,
5.23,
5.3,
5.37,
5.43,
5.5,
5.58,
5.65,
5.73,
5.8,
5.88,
5.97,
6.05,
6.13,
6.22,
6.3,
6.4,
6.48,
6.58,
6.68,
6.78,
6.88,
6.98,
7.1,
7.2,
7.32,
7.43,
7.55,
7.67,
7.8,
7.92,
8.07,
8.2,
8.35,
8.48,
8.63,
8.8,
8.95,
9.12,
9.28,
9.47,
9.65,
9.83,
10.03,
10.23,
10.43,
10.65,
10.88,
11.12,
11.37,
11.62,
11.88,
12.15,
12.43,
12.75,
13.05,
13.38,
13.73,
14.08,
14.47,
14.87,
15.28,
15.73,
16.2,
16.7,
17.22,
17.77,
18.37,
18.98,
19.65,
20.37,
21.13,
21.95,
22.83,
23.8,
24.82,
25.92,
27.15,
28.48,
29.87,
31.5,
33.3,
35.25,
37.28,
39.7,
42.77,
45.35,
48.78,
52.63,
56.88,
61.47,
67.18,
72.9,
78.95,
86.23,
90
];

public $arrpp=[-9.7,
-9.6,
-9.5,
-9.4,
-9.3,
-9.2,
-9.1,
-9,
-8.9,
-8.8,
-8.7,
-8.6,
-8.5,
-8.4,
-8.3,
-8.2,
-8.1,
-8,
-7.9,
-7.8,
-7.7,
-7.6,
-7.5,
-7.4,
-7.3,
-7.2,
-7.1,
-7,
-6.9,
-6.8,
-6.7,
-6.6,
-6.5,
-6.4,
-6.3,
-6.2,
-6.1,
-6,
-5.9,
-5.8,
-5.7,
-5.6,
-5.5,
-5.4,
-5.3,
-5.2,
-5.1,
-5,
-4.9,
-4.8,
-4.7,
-4.6,
-4.5,
-4.4,
-4.3,
-4.2,
-4.1,
-4,
-3.9,
-3.8,
-3.7,
-3.6,
-3.5,
-3.4,
-3.3,
-3.2,
-3.1,
-3,
-2.9,
-2.8,
-2.7,
-2.6,
-2.5,
-2.4,
-2.3,
-2.2,
-2.1,
-2,
-1.9,
-1.8,
-1.7,
-1.6,
-1.5,
-1.4,
-1.3,
-1.2,
-1.1,
-1,
-0.9,
-0.8,
-0.7,
-0.6,
-0.5,
-0.4,
-0.3,
-0.2,
-0.1,
0
];

public $arrht=[
                [-1.9, -1.6, -1.3, -1.1, -0.9, -0.6, -0.4, -0.2, 0, 0.2, 0.4, 0.6, 0.8, 0.9, 1.1],
                [-1.6, -1.3, -1.1, -0.9, -0.7, -0.5, -0.3, -0.2, 0, 0.2, 0.3, 0.5, 0.6, 0.8, 0.9],
                [-1.3, -1.1, -1,   -0.8, -0.6, -0.5, -0.3, -0.1, 0, 0.1, 0.3, 0.4, 0.5, 0.7, 0.8],
                [-1.2, -1,   -0.8, -0.7, -0.5, -0.4, -0.3, -0.1, 0, 0.1, 0.2, 0.4, 0.5, 0.6, 0.7],
                [-0.9, -0.8, -0.7, -0.5, -0.4, -0.3, -0.2, -0.1, 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6],
                [-0.4, -0.4, -0.3, -0.3, -0.2, -0.2, -0.1,  0,   0, 0,   0.1, 0.1, 0.2, 0.2, 0.3],
                [-0.3, -0.2, -0.2, -0.2, -0.1, -0.1, -0.1,  0,   0, 0,   0.1, 0.1, 0.1, 0.1, 0.2],
                [-0.1, -0.1, -0.1, -0.1, -0.1,  0,    0,    0,   0, 0,   0,   0,   0.1, 0.1, 0.1]
    ];

    public $arrhbb = [720, 725, 730, 735, 740, 745, 750, 755, 760, 765, 770, 775, 780];

    public $arrhbh = [5, 10, 20, 20];

    public $arrhtt = [-30, -25, -20, -15, -10, -5, 0, 5, 10, 15, 20, 25, 30, 35, 40];

    public $arrhth = [5,
        6,
        7,
        8,
        10,
        20,
        30,
        50
    ];

    public $arrhb = [
        [0.5, 0.5, 0.4, 0.3, 0.3, 0.2, 0.1, 0.1, 0, -0.1, -0.1, -0.2, -0.3],
        [0.3, 0.2, 0.2, 0.2, 0.1, 0.1, 0.1, 0,   0,  0,   -0.1, -0.1, -0.1],
        [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0,   0,   0,  0,    0,   -0.1, -0.1],
        [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0,   0,   0,  0,    0,   -0.1, -0.1]
        ];

    /**
     * MAE constructor.
     * @param $tgr
     * @param $b
     * @param $kvaz
     * @param $db
     * @param $dhd
     * @param $dhpp
     * @param $dhp
     * @param $dht
     * @param $dhpres
     * @param $dhR
     */

    public $Args=[

    ];

    public function getTv($lat){
//        for($i=0;$i<count($this->arrPHI);$i++){
//            if($this->arrPHI[$i]<$lat){
//                $PhiI = $i;
//                break;
//            }
//        }


        for($f=0;$f<count($this->arrPHI);$f++){
            if($lat>$this->arrPHI[$f]){
                if($lat>0) {
                    $phi1 = $this->arrPHI[$f];
                    $phi2 = $this->arrPHI[$f - 1];
                }else{
                    $phi1 = $this->arrPHI[$f -1];
                    $phi2 = $this->arrPHI[$f];
                }
                break;
            }

        }
        $date0 = new \DateTime();
        $TkHM1 = $this->arrTv[$phi1];
        $date0->setTime($TkHM1[0][0], $TkHM1[0][1]);
        $Tv1 = $date0->getTimestamp();
        $this->Args['Tvt1']=$Tv1;
        $TkHM2 = $this->arrTv[$phi2];
        $date0->setTime($TkHM2[0][0], $TkHM2[0][1]);
        $Tv2 = $date0->getTimestamp();

        $dlat = round(($Tv2-$Tv1)/($phi2-$phi1)*($lat-$phi1),0);
        $this->Args['Tvdlat']=$dlat;


    }
    public function __construct($datetime)
    {

        $time = date('H', $datetime);

        $day = date('d', $datetime);
        $month = date('n', $datetime)*1;
        $date = array_search($day,$this->arrdate[$month-1]);
        $dat1=$day.".".$month;
        $dat2=($day+1).".".$month;
        $St1=$this->arrSt[$dat1];
        $St2=$this->arrSt[$dat2];
        $St=(($St2-$St1+360)/24*$time+$St1);
        if($St>360){
            $St=($St-360);
        }
        $this->St = $St;
        $this->Args['St']=$St;


        $tgr1=$this->arrtgrs[$date];
        $tgr2=$this->arrtgrs[($date+1)];
        $tgr=(($tgr2-$tgr1+360)/24*$time+$tgr1);
        if($tgr>360){
            $tgr=($tgr-360);
        }
//        $this->tgr = $tgr;
        $this->Args['tgr']=round($tgr,3);



        $b1=$this->arrbs[$date];
        $b2=$this->arrbs[($date+1)];
        $b=(($b2-$b1)/24*$time+$b1);
        if($b>360){
            $b=($b-360);
        }
//        $this->b = $b;
        $this->Args['b']=round($b,3);


        $this->kvaz = $this->arrkvazi[$date];
        $this->db = $this->arrdeltab[$date];

        $this->Args['kvaz']=round($this->arrkvazi[$date],1);
        $this->Args['dtb']=round($this->arrdeltab[$date],1);

        $min = date('i', $datetime)*1+date('s', $datetime)/60;
        $this->Args['dS']=round(15.04167/60*$min,3);
        $this->Args['dt1']=round(14.98333/60*$min,3);
        $this->Args['dt2']=round($this->Args['kvaz']/60*$min,3);
        $this->Args['db']=round($this->Args['dtb']/60*$min,3);

        $date0 = new \DateTime();
        $TkHM = $this->arrTk[$dat1];
        $date0->setDate(date('Y', $datetime), date('m', $datetime), date('d', $datetime));
        $date0->setTime($TkHM[0], $TkHM[1]);
        $this->Args['Tk']=$date0->getTimestamp();




//        if($full) {
////            $this->dhd = $dhd;
////            $this->dhpp = $dhpp;
////            $this->dhp = $dhp;
////            $this->dht = $dht;
////            $this->dhpres = $dhpres;
////            $this->dhR = $dhR;
//        }
    }


    ///5 10 15 20 25 30 35
    public $PolarisArr=[
        '0'=>[27,27,28,29,30,31,33],
        '3'=>[25,25,26,27,28,29,31],
        '8'=>[22,22,23,23,24,25,27],
        '13'=>[18,19,19,20,20,21,23],
        '18'=>[15,15,15,16,16,17,18],
        '23'=>[11,11,12,12,12,13,14],
        '28'=>[7,8,8,7,7,9,9],
        '33'=>[4,4,4,4,4,4,4],
        '38'=>[0,0,0,0,0,0,0],
        '43'=>[4,4,4,4,4,4,4],
        '48'=>[7,8,8,7,7,9,9],
        '53'=>[11,11,12,12,12,13,14],
        '58'=>[15,15,15,16,16,17,18],
        '63'=>[18,19,19,20,20,21,23],
        '68'=>[22,22,23,23,24,25,27],
        '73'=>[25,25,26,27,28,29,31],
        '78'=>[28,28,29,30,31,33,34],
        '83'=>[31,31,32,33,34,36,38],
        '88'=>[34,34,35,36,37,39,41],
        '93'=>[36,36,37,38,40,41,44],
        '98'=>[38,38,39,40,42,44,46],
        '103'=>[40,40,41,42,44,46,49],
        '108'=>[41,42,43,44,45,48,50],
        '113'=>[42,43,44,45,47,49,52],
        '118'=>[43,44,45,46,48,50,53],
        '123'=>[44,44,45,46,48,50,53],
        '128'=>[44,45,45,47,48,51,54],
        '133'=>[44,44,45,46,48,50,53],
        '138'=>[43,44,45,46,48,50,53],
        '143'=>[43,43,44,45,47,49,52],
        '148'=>[41,42,43,44,45,48,50],
        '153'=>[40,40,41,42,44,46,48],
        '158'=>[38,39,39,40,42,44,46],
        '163'=>[36,37,37,38,40,41,44],
        '168'=>[34,35,35,36,37,39,41],
        '173'=>[31,30,32,33,34,36,38],
        '178'=>[28,29,29,30,31,33,34],
        '183'=>[25,26,26,27,28,29,31],
        '188'=>[22,23,23,23,24,25,27],
        '193'=>[19,19,19,20,21,21,23],
        '198'=>[15,16,16,16,17,17,18],
        '203'=>[12,12,12,12,13,13,14],
        '208'=>[8,8,8,8,9,9,9],
        '213'=>[4,4,4,4,4,5,5],
        '218'=>[0,0,0,0,0,0,0],
        '223'=>[4,4,4,4,4,5,5],
        '228'=>[8,8,8,8,9,9,9],
        '233'=>[12,12,12,12,13,13,14],
        '238'=>[15,16,16,16,17,17,18],
        '243'=>[19,19,19,20,21,21,23],
        '248'=>[22,23,23,23,24,25,27],
        '253'=>[25,26,26,27,28,29,31],
        '258'=>[28,29,29,30,31,33,34],
        '263'=>[31,30,32,33,34,36,38],
        '268'=>[34,35,35,36,37,39,41],
        '273'=>[36,37,37,38,40,41,44],
        '278'=>[38,39,39,40,42,44,46],
        '283'=>[40,40,41,42,44,46,48],
        '288'=>[41,42,43,44,45,48,50],
        '293'=>[43,43,44,45,47,49,52],
        '298'=>[43,44,45,46,48,50,53],
        '303'=>[44,44,45,46,48,50,53],
        '308'=>[44,45,45,47,48,51,54],
        '313'=>[44,44,45,46,48,50,53],
        '318'=>[43,44,45,46,48,50,53],
        '323'=>[42,43,44,45,47,49,52],
        '328'=>[41,42,43,44,45,48,50],
        '333'=>[40,40,41,42,44,46,49],
        '338'=>[38,38,39,40,42,44,46],
        '343'=>[36,36,37,38,40,41,44],
        '348'=>[34,34,35,36,37,39,41],
        '353'=>[31,31,32,33,34,36,38],
        '358'=>[28,28,29,30,31,33,34],
        '360'=>[27,27,28,29,30,31,33]
    ];


    public function getAPolaris($lat, $Sm){
        $index1 = (floor(($Sm+2)/5)-1)*5+3;
        $index2=$index1+5;

        $index3 = (floor(($lat)/5)-1);
        $index4 = $index3+1;



        $A1 = $this->PolarisArr[$index1.""][$index3];
        $A2 = $this->PolarisArr[$index2.""][$index3];

        $A01 = ($Sm-$index1)/($index2-$index1)*($A2-$A1)+$A1;


        $A1 = $this->PolarisArr[$index1.""][$index4];
        $A2 = $this->PolarisArr[$index2.""][$index4];

        $A02 = ($Sm-$index1)/($index2-$index1)*($A2-$A1)+$A1;

        $A = (($lat-floor(($lat)/5)*5)/5*($A02-$A01)+$A01)/60;

        if($Sm>=38&&$Sm<=218){
            $A=360-$A;
        }

        return $A;
    }

    public function getStar($number){
        return $this->stars[$number];
    }

}