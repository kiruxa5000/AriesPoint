<?php
/**
 * Created by PhpStorm.
 * User: zolkinka
 * Date: 23.01.18
 * Time: 16:59
 */

namespace App;


class Corrections
{
    public $dhd_e=[3.18,
        3.39,
        3.6,
        3.82,
        4.04,
        4.27,
        4.51,
        4.75,
        5,
        5.26,
        5.52,
        5.79,
        6.07,
        6.35,
        6.64,
        6.93,
        7.24,
        7.54,
        7.86,
        8.18,
        8.5,
        8.84,
        9.17,
        9.52,
        9.88,
        10.24,
        10.6,
        10.98,
        11.35,
        11.74,
        12.13,
        12.52,
        12.93,
        13.34,
        13.76,
        14.18,
        14.62,
        15.05,
        15.49,
        15.94,
        16.39,
        16.86,
        17.32,
        17.8,
        18.28,
        18.77,
        19.26,
        19.76,
        20.27,
    ];

    public $dhd_d = [-3.2,
        -3.3,
        -3.4,
        -3.5,
        -3.6,
        -3.7,
        -3.8,
        -3.9,
        -4,
        -4.1,
        -4.2,
        -4.3,
        -4.4,
        -4.5,
        -4.6,
        -4.7,
        -4.8,
        -4.9,
        -5,
        -5.1,
        -5.2,
        -5.3,
        -5.4,
        -5.5,
        -5.6,
        -5.7,
        -5.8,
        -5.9,
        -6,
        -6.1,
        -6.2,
        -6.3,
        -6.4,
        -6.5,
        -6.6,
        -6.7,
        -6.8,
        -6.9,
        -7,
        -7.1,
        -7.2,
        -7.3,
        -7.4,
        -7.5,
        -7.6,
        -7.7,
        -7.8,
        -7.9,
        -8,
    ];


    public $dhp_h = [
        5,
        5.06667,
        5.13333,
        5.18333,
        5.25,
        5.33333,
        5.4,
        5.46667,
        5.53333,
        5.61667,
        5.68333,
        5.76667,
        5.83333,
        5.91667,
        6,
        6.08333,
        6.16667,
        6.26667,
        6.35,
        6.43333,
        6.53333,
        6.63333,
        6.73333,
        6.83333,
        6.93333,
        7.03333,
        7.15,
        7.25,
        7.36667,
        7.48333,
        7.61667,
        7.73333,
        7.86667,
        8,
        8.13333,
        8.26667,
        8.4,
        8.55,
        8.7,
        8.86667,
        9.03333,
        9.2,
        9.36667,
        9.55,
        9.73333,
        9.91667,
        10.11667,
        10.31667,
        10.53333,
        10.75,
        10.98333,
        11.21667,
        11.46667,
        11.73333,
        12,
        12.28333,
        12.56667,
        12.88333,
        13.2,
        13.53333,
        13.88333,
        14.25,
        14.63333,
        15.03333,
        15.46667,
        15.91667,
        16.4,
        16.9,
        17.43333,
        18,
        18.6,
        19.25,
        19.91667,
        20.65,
        21.43333,
        22.26667,
        23.16667,
        24.13333,
        25.16667,
        26.31667,
        27.55,
        28.9,
        30.33333,
        31.95,
        33.76667,
        35.71667,
        37.66667,
        40.06667,
        42.66667,
        45.43333,
        48.7,
        52.23333,
        56.13333,
        60.38333,
        65.06667,
        70.11667,
        75.5,
        81.18333,
        87.06667,
        90,

    ];
    public $dhp_p = [
        -9.8,
        -9.7,
        -9.6,
        -9.5,
        -9.4,
        -9.3,
        -9.2,
        -9.1,
        -9,
        -8.9,
        -8.8,
        -8.7,
        -8.6,
        -8.5,
        -8.4,
        -8.3,
        -8.2,
        -8.1,
        -8,
        -7.9,
        -7.8,
        -7.7,
        -7.6,
        -7.5,
        -7.4,
        -7.3,
        -7.2,
        -7.1,
        -7,
        -6.9,
        -6.8,
        -6.7,
        -6.6,
        -6.5,
        -6.4,
        -6.3,
        -6.2,
        -6.1,
        -6,
        -5.9,
        -5.8,
        -5.7,
        -5.6,
        -5.5,
        -5.4,
        -5.3,
        -5.2,
        -5.1,
        -5,
        -4.9,
        -4.8,
        -4.7,
        -4.6,
        -4.5,
        -4.4,
        -4.3,
        -4.2,
        -4.1,
        -4,
        -3.9,
        -3.8,
        -3.7,
        -3.6,
        -3.5,
        -3.4,
        -3.3,
        -3.2,
        -3.1,
        -3,
        -2.9,
        -2.8,
        -2.7,
        -2.6,
        -2.5,
        -2.4,
        -2.3,
        -2.2,
        -2.1,
        -2,
        -1.9,
        -1.8,
        -1.7,
        -1.6,
        -1.5,
        -1.4,
        -1.3,
        -1.2,
        -1.1,
        -1,
        -0.9,
        -0.8,
        -0.7,
        -0.6,
        -0.5,
        -0.4,
        -0.3,
        -0.2,
        -0.1,
        0,

    ];
    public $dhp;

    public $dht_d=[
        [-1.9, -1.6, -1.3, -1.1, -0.9, -0.6, -0.4, -0.2, 0, 0.2, 0.4, 0.6, 0.8, 0.9, 1.1],
        [-1.6, -1.3, -1.1, -0.9, -0.7, -0.5, -0.3, -0.2, 0, 0.2, 0.3, 0.5, 0.6, 0.8, 0.9],
        [-1.3, -1.1, -1,   -0.8, -0.6, -0.5, -0.3, -0.1, 0, 0.1, 0.3, 0.4, 0.5, 0.7, 0.8],
        [-1.2, -1,   -0.8, -0.7, -0.5, -0.4, -0.3, -0.1, 0, 0.1, 0.2, 0.4, 0.5, 0.6, 0.7],
        [-0.9, -0.8, -0.7, -0.5, -0.4, -0.3, -0.2, -0.1, 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6],
        [-0.4, -0.4, -0.3, -0.3, -0.2, -0.2, -0.1,  0,   0, 0,   0.1, 0.1, 0.2, 0.2, 0.3],
        [-0.3, -0.2, -0.2, -0.2, -0.1, -0.1, -0.1,  0,   0, 0,   0.1, 0.1, 0.1, 0.1, 0.2],
        [-0.1, -0.1, -0.1, -0.1, -0.1,  0,    0,    0,   0, 0,   0,   0,   0.1, 0.1, 0.1]
    ];
    public $dht_t = [-30, -25, -20, -15, -10, -5, 0, 5, 10, 15, 20, 25, 30, 35, 40];

    public $dht_h = [5,
        6,
        7,
        8,
        10,
        20,
        30,
        50
    ];

    public $dht;


    public $dhb_d = [
        [0.5, 0.5, 0.4, 0.3, 0.3, 0.2, 0.1, 0.1, 0, -0.1, -0.1, -0.2, -0.3],
        [0.3, 0.2, 0.2, 0.2, 0.1, 0.1, 0.1, 0,   0,  0,   -0.1, -0.1, -0.1],
        [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0,   0,   0,  0,    0,   -0.1, -0.1],
        [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0,   0,   0,  0,    0,   -0.1, -0.1]
    ];

    public $dhb_b = [720, 725, 730, 735, 740, 745, 750, 755, 760, 765, 770, 775, 780];

    public $dhb_h = [5, 10, 20];





    public function get_dhb($B, $h){
        if($h>20){
            return 0;
        }else {
            $dt = $this->interpolator($B, $h, $this->dhb_b, $this->dhb_h, $this->dhb_d);
            return round($dt / 60, 3);
        }
    }


    public function get_dht($t, $h){
        if($h>50){
            return 0;
        }else {
            $dt = $this->interpolator($t, $h, $this->dht_t, $this->dht_h, $this->dht_d);
            return round($dt / 60, 3);
        }
    }
    public function get_dhp($h){
        for($i=0;$i<$this->dhp_p;$i++){
            if($h<=$this->dhp_h[$i]){
                return round($this->dhp_p[$i-1]/60,3);
                break;
            }
        }

//        $dt = $this->interpolator2D( $h, $this->dhp_h,$this->dhp_p);
//        return round($dt/60,4);
    }

    public function get_dhz($V, $A, $PU, $Tgr, $Tnab){
        return ($V/60)*cos(deg2rad($A-$PU))*(($Tgr-$Tnab)/60);
    }
    public function get_i($Oisr){
        if($Oisr<180){
            $Oisr=$Oisr+360;
        }
        return round(360-$Oisr,3);
    }


    public function interpolator2D($a, $a_arr, $c_arr){
        $a_i_1=-2;
        $a_i_2=-2;

        for($i=0;$i<count($a_arr);$i++){
            if($a<$a_arr[$i]){
                $a_i_1=$i-1;
                $a_i_2=$i;
                break;
            }
        }

        if($a_i_1==-1) {
            $a_i_1 = 0;
            $a_i_2 = 1;
        }
        if($a_i_1==-2){
            $a_i_1 = count($a_arr)-2;
            $a_i_2 = $a_i_1+1;
        }



        if($a_i_1==-1){
            $c11=$c_arr[0];
            $c12=$c_arr[0];
        }else{
            $c11 = $c_arr[$a_i_1];
            $c12 = $c_arr[$a_i_2];
        }

        $c = ($a-$a_arr[$a_i_1])/($a_arr[$a_i_2]-$a_arr[$a_i_1])*($c12-$c11)+$c11;

//        $c = ($b-$b_arr[$b_i_1])/($b_arr[$b_i_2]-$b_arr[$b_i_1])*($c2-$c1)+$c1;
//        $dt=$dt2;
        return $c;

    }





    public function interpolator($a, $b, $a_arr, $b_arr, $c_arr){
        $a_i_1=-2;
        $a_i_2=-2;

        $b_i_1=-2;
        $b_i_2=-2;
        for($i=0;$i<count($a_arr);$i++){
            if($a<$a_arr[$i]){
                $a_i_1=$i-1;
                $a_i_2=$i;
                break;
            }
        }

        for($i=0;$i<count($b_arr);$i++){
            if($b<$b_arr[$i]){
                $b_i_1=$i-1;
                $b_i_2=$i;
                break;
            }
        }
        if($a_i_1==-1) {
            $a_i_1 = 0;
            $a_i_2 = 1;
        }
        if($b_i_1==-1) {
            $b_i_1 = 0;
            $b_i_2 = 1;
        }
        if($a_i_1==-2){
            $a_i_1 = count($a_arr)-2;
            $a_i_2 = $a_i_1+1;
        }
        if($b_i_1==-2){
            $b_i_1 = count($b_arr)-2;
            $b_i_2 = $b_i_1+1;
        }


        if($a_i_1==-1){
            $c11=$c_arr[$b_i_1][0];
            $c12=$c_arr[$b_i_2][0];
        }else{
            $c11 = $c_arr[$b_i_1][$a_i_1];
            $c12 = $c_arr[$b_i_1][$a_i_2];
        }

        if($b_i_1==-1){
            $c21=$c_arr[0][$a_i_1];
            $c22=$c_arr[0][$a_i_2];
        }else{
            $c21 = $c_arr[$b_i_2][$a_i_1];
            $c22 = $c_arr[$b_i_2][$a_i_2];
        }

        $c1 = ($a-$a_arr[$a_i_1])/($a_arr[$a_i_2]-$a_arr[$a_i_1])*($c12-$c11)+$c11;
        $c2 = ($a-$a_arr[$a_i_1])/($a_arr[$a_i_2]-$a_arr[$a_i_1])*($c22-$c21)+$c21;

        $c = ($b-$b_arr[$b_i_1])/($b_arr[$b_i_2]-$b_arr[$b_i_1])*($c2-$c1)+$c1;
//        $dt=$dt2;
        return $c;

    }


    /**
     * Corrections constructor.
     */
    public function __construct()
    {
    }

    public function get_dhd($e){

        for($i=0;$i<count($this->dhd_e);$i++){
            if($e<$this->dhd_e[$i]){
                return $this->dhd_d[$i-1];
            }
        }
    }

}